--Move & Ultimate Names

local player = game.Players.LocalPlayer

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local function updateHotbar()
    local hotbar = playerGui:FindFirstChild("Hotbar")
    if hotbar then
        local backpack = hotbar:FindFirstChild("Backpack")
        if backpack then
            local hotbarFrame = backpack:FindFirstChild("Hotbar")
            if hotbarFrame then
                local toolNames = {
                    "Reversal Red: Repel",
                    "Multi Limitless Barrage",
                    "Speedy Strike",
                    "Blue: Alignment Strike"
                }

                for i = 1, 4 do
                    local button = hotbarFrame:FindFirstChild(tostring(i))
                    if button then
                        local baseButton = button:FindFirstChild("Base")
                        if baseButton then
                            local toolName = baseButton:FindFirstChild("ToolName")
                            if toolName then
                                toolName.Text = toolNames[i]
                            end
                        end
                    end
                end
            end
        end
    end
end

local function updateMagicHealth()
    local screenGui = playerGui:FindFirstChild("ScreenGui")
    if screenGui then
        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")
        if magicHealthFrame then
            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")
            if textLabel then
                textLabel.Text = "Six Eyes"
            end
        end
    end
end

task.spawn(function()
    while true do
        updateHotbar()
        updateMagicHealth()
        task.wait(999999999) -- if u want looping turn to 0.7
    end
end)


--[[Animations]]

--[[Move 1]]

local animationId = 10468665991


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://16746824621"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1.3


Anim:Play()

Anim:AdjustSpeed(0.1)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)
local Test1 = game.ReplicatedStorage.Emotes.VFX.VfxMods.FS.vfx.RedScreen.Attachment
local Test2 = game.ReplicatedStorage.Resources.FinalEffects.FinalHitEffect.Root.Center

local test1 = Test1:Clone()
test1.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test1:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(0, 0, 0))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(0.5)

local test2 = Test2:Clone()
test2.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test2:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(1, 0, 0))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)

for _, child in ipairs(test1:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(0.5, 0, 0))
    end
end

task.wait(0)

for _, child in ipairs(test2:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(0.5, 0, 0))
    end
end

task.wait(0)

for _, child in ipairs(test1:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(0, 0, 0))
    end
end

for _, child in ipairs(test2:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(1, 0, 0))
    end
end

task.wait(0)

test1:Destroy()
test2:Destroy()


    end

end

--[[END OF MOVE 1 ANIM]]

--[[Move 2]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10466974800


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13560306510"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.3


Anim:Play()

Anim:AdjustSpeed(0.9)

Anim.TimePosition = startTime

Anim:AdjustSpeed(2.9)
local Test = game.ReplicatedStorage.Resources.HeadFirst.UpKickBig.Particle.Impact

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(1, 1, 1))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)
test:Destroy()


    end

end

--[[END OF MOVE 2 ANIM]]

--[[Move 3]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10471336737


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://140164642047188"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 6.9


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)
local Test = game.ReplicatedStorage.Resources.LastBreath.hmmmm.dash3.VFX

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(1, 1, 1))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)
test:Destroy()


delay(1, function()

    Anim:Stop()

end)


    end

end

--[[END OF MOVE 3 ANIM]]

--[[Move 4]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12510170988


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://76530443909428"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(6)

local Test = game.ReplicatedStorage.Resources.Collat.HumanoidRootPart.Attachment.spinningparty

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(0, 1, 1))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)
test:Destroy()

    end

end

--[[END OF MOVE 4 ANIM]]

--[[Wall combo]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 15955393872


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18903642853 "

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.2


Anim:Play()

Anim:AdjustSpeed(1.1)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

--[[END OF WALL COMBO ANIM]]

--[[Ult Activation]]

local animationId = 12447707844



-- Animation played event handler
local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Stop current animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Play the new animation
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://104243341468337"
        
        local Anim = humanoid:LoadAnimation(AnimAnim)
        local startTime = 0

        Anim:Play()
        Anim:AdjustSpeed(0)  -- Start with zero speed (paused)
        Anim.TimePosition = startTime  -- Set starting time
        Anim:AdjustSpeed(1)  -- Resume normal speed
local Test = game.ReplicatedStorage.Resources.Sunrise.FinalFX.Explode.C

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(0, 1, 1))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)
test:Destroy()

        -- Now trigger the dialog display
-- This would be a call to start showing the dialog.
    end
end

-- Connect the onAnimationPlayed function to the AnimationPlayed event
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[END OF ULT ACTIVATION ANIM]]

--[[Dash]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://135104210400610"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)
local Test = game.ReplicatedStorage.Resources.Meteor.TatsuCMON.Part.Attachment

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(1, 1, 1))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)
test:Destroy()


delay(1.8, function()

    Anim:Stop()

end)


    end

end

--[[END OF DASH ANIM]]

--[[Uppercut]]
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18179181663"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(1)

Anim.TimePosition = startTime
local Test = game.ReplicatedStorage.Resources.KJEffects.ThrowPart.Throw

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(1, 1, 1))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)
test:Destroy()

    end

end

--[[END OF UPPERCUT ANIM]]

--[[Downslam]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://96865367566704"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 3.1


wait(0.2)

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)

local Test = game.ReplicatedStorage.Resources.FinalEffects.VictimHit.Root.Center

local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")

for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = ColorSequence.new(Color3.new(1, 1, 1))
        child:Emit(15)
        child.Enabled = true
    end
end

task.wait(1)
test:Destroy()


    end

end

--[[END OF DOWNSLAM ANIM]]

--[[Punch anims]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local animationIdsToStop = {

    [17859015788] = true, --punch idk

    [10469493270] = true, --punch1

    [10469630950] = true, --punch2

    [10469639222] = true, --punch3

    [10469643643] = true, --punch4

}


local replacementAnimations = {

    ["10469493270"] = "rbxassetid://17889458563", --punch1

    ["10469630950"] = "rbxassetid://17889461810", --punch2

    ["10469639222"] = "rbxassetid://17889471098", --punch3

    ["10469643643"] = "rbxassetid://17889290569", --punch4

    ["17859015788"] = "rbxassetid://12684185971", --punch idk

    ["11365563255"] = "rbxassetid://14516273501" --punch idk

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end) 
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "satoru gojo",
    Text = "made by inferno.klol",
    Duration = 15,
    Icon = "rbxassetid://132233142448056"
})
